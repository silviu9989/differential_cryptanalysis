Checking identity on 16-bit words
  Test 1
    Key = 534ffb4bdc8b26d8cecf
    Input = d42a
    First command line = printf "%s" "d42a" | ./minicipher -k "534ffb4bdc8b26d8cecf" 2>&1
    First output = e251
    Second command line = printf "%s" "e251" | ./minicipher -d -k "534ffb4bdc8b26d8cecf" 2>&1
    Second output = d42a
         OK

  Test 2
    Key = 0ce38b2525636ee64d64
    Input = 8b3c
    First command line = printf "%s" "8b3c" | ./minicipher -k "0ce38b2525636ee64d64" 2>&1
    First output = 1fd0
    Second command line = printf "%s" "1fd0" | ./minicipher -d -k "0ce38b2525636ee64d64" 2>&1
    Second output = 8b3c
         OK

  Test 3
    Key = c01fab131cd890a9369c
    Input = 584a
    First command line = printf "%s" "584a" | ./minicipher -k "c01fab131cd890a9369c" 2>&1
    First output = 9cca
    Second command line = printf "%s" "9cca" | ./minicipher -d -k "c01fab131cd890a9369c" 2>&1
    Second output = 584a
         OK

  Test 4
    Key = 928d3010b8d7bffc4409
    Input = e367
    First command line = printf "%s" "e367" | ./minicipher -k "928d3010b8d7bffc4409" 2>&1
    First output = 3df0
    Second command line = printf "%s" "3df0" | ./minicipher -d -k "928d3010b8d7bffc4409" 2>&1
    Second output = e367
         OK

  Test 5
    Key = 9b1ac69bec4a1fe142a9
    Input = b8da
    First command line = printf "%s" "b8da" | ./minicipher -k "9b1ac69bec4a1fe142a9" 2>&1
    First output = 6109
    Second command line = printf "%s" "6109" | ./minicipher -d -k "9b1ac69bec4a1fe142a9" 2>&1
    Second output = b8da
         OK

  Test 6
    Key = e9229750e40b9295a8e8
    Input = 0028
    First command line = printf "%s" "0028" | ./minicipher -k "e9229750e40b9295a8e8" 2>&1
    First output = b074
    Second command line = printf "%s" "b074" | ./minicipher -d -k "e9229750e40b9295a8e8" 2>&1
    Second output = 0028
         OK

  Test 7
    Key = 26f4e536aa77f58cf082
    Input = 0f32
    First command line = printf "%s" "0f32" | ./minicipher -k "26f4e536aa77f58cf082" 2>&1
    First output = 78cb
    Second command line = printf "%s" "78cb" | ./minicipher -d -k "26f4e536aa77f58cf082" 2>&1
    Second output = 0f32
         OK

  Test 8
    Key = a50ebbdeb1ab0de18067
    Input = 22c0
    First command line = printf "%s" "22c0" | ./minicipher -k "a50ebbdeb1ab0de18067" 2>&1
    First output = 863b
    Second command line = printf "%s" "863b" | ./minicipher -d -k "a50ebbdeb1ab0de18067" 2>&1
    Second output = 22c0
         OK

  Test 9
    Key = a0277fa38b21dbff6fde
    Input = 3006
    First command line = printf "%s" "3006" | ./minicipher -k "a0277fa38b21dbff6fde" 2>&1
    First output = 4011
    Second command line = printf "%s" "4011" | ./minicipher -d -k "a0277fa38b21dbff6fde" 2>&1
    Second output = 3006
         OK

  Test 10
    Key = e16fa3d0356273ddb623
    Input = 7d84
    First command line = printf "%s" "7d84" | ./minicipher -k "e16fa3d0356273ddb623" 2>&1
    First output = 75d1
    Second command line = printf "%s" "75d1" | ./minicipher -d -k "e16fa3d0356273ddb623" 2>&1
    Second output = 7d84
         OK

Checking identity in CBC mode using different lengths
  Test on 1 bytes
    Key = d723422f9735c2b35691
    IV = 6677
    Input = 5
    First command line = printf "%s" "5" | ./minicipher -M -i "6677" -k "d723422f9735c2b35691" 2>&1
    First output = 886b
    Second command line = printf "%s" "886b" | ./minicipher -d -M -i "6677" -k "d723422f9735c2b35691" 2>&1
    Second output = 5
         OK

  Test on 2 bytes
    Key = 1d233e311a9eecabdc33
    IV = a937
    Input = 6c
    First command line = printf "%s" "6c" | ./minicipher -M -i "a937" -k "1d233e311a9eecabdc33" 2>&1
    First output = d6bd
    Second command line = printf "%s" "d6bd" | ./minicipher -d -M -i "a937" -k "1d233e311a9eecabdc33" 2>&1
    Second output = 6c
         OK

  Test on 4 bytes
    Key = 67540a5b1366332ac602
    IV = 91a0
    Input = 03d3
    First command line = printf "%s" "03d3" | ./minicipher -M -i "91a0" -k "67540a5b1366332ac602" 2>&1
    First output = 7f620778
    Second command line = printf "%s" "7f620778" | ./minicipher -d -M -i "91a0" -k "67540a5b1366332ac602" 2>&1
    Second output = 03d3
         OK

  Test on 5 bytes
    Key = c7f824e249390c67dc25
    IV = c55b
    Input = 59dff
    First command line = printf "%s" "59dff" | ./minicipher -M -i "c55b" -k "c7f824e249390c67dc25" 2>&1
    First output = 6ac03272
    Second command line = printf "%s" "6ac03272" | ./minicipher -d -M -i "c55b" -k "c7f824e249390c67dc25" 2>&1
    Second output = 59dff
         OK

  Test on 25 bytes
    Key = 66526583986da5b80bd4
    IV = 3418
    Input = 7892300410fb74234813672f8
    First command line = printf "%s" "7892300410fb74234813672f8" | ./minicipher -M -i "3418" -k "66526583986da5b80bd4" 2>&1
    First output = 7165bc11f49d8001e467a05937cd
    Second command line = printf "%s" "7165bc11f49d8001e467a05937cd" | ./minicipher -d -M -i "3418" -k "66526583986da5b80bd4" 2>&1
    Second output = 7892300410fb74234813672f8
         OK

  Test on 26 bytes
    Key = e30c4bdad28d44f37b9d
    IV = 83e5
    Input = 669022177a5d771fa7cfc6365b
    First command line = printf "%s" "669022177a5d771fa7cfc6365b" | ./minicipher -M -i "83e5" -k "e30c4bdad28d44f37b9d" 2>&1
    First output = e0a580a82f7a5a2b7cbfac29f104
    Second command line = printf "%s" "e0a580a82f7a5a2b7cbfac29f104" | ./minicipher -d -M -i "83e5" -k "e30c4bdad28d44f37b9d" 2>&1
    Second output = 669022177a5d771fa7cfc6365b
         OK

  Test on 17 bytes
    Key = 35b70c7f9bbf0969123b
    IV = 1c66
    Input = 08834953e81b5d462
    First command line = printf "%s" "08834953e81b5d462" | ./minicipher -M -i "1c66" -k "35b70c7f9bbf0969123b" 2>&1
    First output = 5bcaf74c3255bd77609d
    Second command line = printf "%s" "5bcaf74c3255bd77609d" | ./minicipher -d -M -i "1c66" -k "35b70c7f9bbf0969123b" 2>&1
    Second output = 08834953e81b5d462
         OK

  Test on 18 bytes
    Key = 89852fd9365ba0e23db1
    IV = 25f5
    Input = 027de94724d542a3fa
    First command line = printf "%s" "027de94724d542a3fa" | ./minicipher -M -i "25f5" -k "89852fd9365ba0e23db1" 2>&1
    First output = dd5755885d62d3a195ca
    Second command line = printf "%s" "dd5755885d62d3a195ca" | ./minicipher -d -M -i "25f5" -k "89852fd9365ba0e23db1" 2>&1
    Second output = 027de94724d542a3fa
         OK

  Test on 19 bytes
    Key = 1cb41f1173607bbaaab7
    IV = 3937
    Input = 7e49a1361061471a7b7
    First command line = printf "%s" "7e49a1361061471a7b7" | ./minicipher -M -i "3937" -k "1cb41f1173607bbaaab7" 2>&1
    First output = e4973fb11a6d45b7fa17
    Second command line = printf "%s" "e4973fb11a6d45b7fa17" | ./minicipher -d -M -i "3937" -k "1cb41f1173607bbaaab7" 2>&1
    Second output = 7e49a1361061471a7b7
         OK

  Test on 32 bytes
    Key = 432b4525977df31c30fb
    IV = 7961
    Input = 5613cdeefa464c775ddd4e38ac1a53aa
    First command line = printf "%s" "5613cdeefa464c775ddd4e38ac1a53aa" | ./minicipher -M -i "7961" -k "432b4525977df31c30fb" 2>&1
    First output = a65b1299f77a4fdf5ed9d5fe0e9c14778f7d
    Second command line = printf "%s" "a65b1299f77a4fdf5ed9d5fe0e9c14778f7d" | ./minicipher -d -M -i "7961" -k "432b4525977df31c30fb" 2>&1
    Second output = 5613cdeefa464c775ddd4e38ac1a53aa
         OK

Checking identity in CBC mode on random binary files
  Test on 10 512-byte sectors
    Key = 5babf9e40dc429b060a2
    IV = 570a
    Command line = cat <TEMPFILE> | ./minicipher -b -M -i "570a" -k "5babf9e40dc429b060a2" 2>&1 | ./minicipher -b -d -M -i "570a" -k "5babf9e40dc429b060a2" 2>&1 | cmp - <TEMPFILE>
         OK

  Test on 20 512-byte sectors
    Key = ef8a09d7d9431cc99eda
    IV = 079e
    Command line = cat <TEMPFILE> | ./minicipher -b -M -i "079e" -k "ef8a09d7d9431cc99eda" 2>&1 | ./minicipher -b -d -M -i "079e" -k "ef8a09d7d9431cc99eda" 2>&1 | cmp - <TEMPFILE>
         OK

  Test on 30 512-byte sectors
    Key = 248b116884ff21692b30
    IV = 8c19
    Command line = cat <TEMPFILE> | ./minicipher -b -M -i "8c19" -k "248b116884ff21692b30" 2>&1 | ./minicipher -b -d -M -i "8c19" -k "248b116884ff21692b30" 2>&1 | cmp - <TEMPFILE>
         OK

  Test on 40 512-byte sectors
    Key = 24bb7aad6143dc41c9b4
    IV = cf9d
    Command line = cat <TEMPFILE> | ./minicipher -b -M -i "cf9d" -k "24bb7aad6143dc41c9b4" 2>&1 | ./minicipher -b -d -M -i "cf9d" -k "24bb7aad6143dc41c9b4" 2>&1 | cmp - <TEMPFILE>
         OK

  Test on 50 512-byte sectors
    Key = 062e164c565f71151fc9
    IV = bfba
    Command line = cat <TEMPFILE> | ./minicipher -b -M -i "bfba" -k "062e164c565f71151fc9" 2>&1 | ./minicipher -b -d -M -i "bfba" -k "062e164c565f71151fc9" 2>&1 | cmp - <TEMPFILE>
         OK

  Test on 2048 512-byte sectors
    Key = 6be3835829a7c8e64f52
    IV = 10a7
    Command line = cat <TEMPFILE> | ./minicipher -b -M -i "10a7" -k "6be3835829a7c8e64f52" 2>&1 | ./minicipher -b -d -M -i "10a7" -k "6be3835829a7c8e64f52" 2>&1 | cmp - <TEMPFILE>
         OK

